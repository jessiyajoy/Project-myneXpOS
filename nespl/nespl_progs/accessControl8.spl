alias functionNum R1;


// -----ACQUIRE_KERN_LOCK

// Arguments : NIL Ret : NIL
if( functionNum == ACQUIRE_KERN_LOCK ) then

    if( CORE == SECONDARY_CORE ) then

        // PAGING_STATUS or LOGOUT_STATUS is on
        if ([SYSTEM_STATUS_TABLE + 5] == 1 || [SYSTEM_STATUS_TABLE + 7] == 1) then

            // Set the state of current process(of SECONDARY_CORE) to READY
            [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 6]*16 + 4] = READY;

            call SCHEDULER;

            // Scheduler Module modified on the NEXSM machine

        endif;
    endif ;

    while( tsl(KERN_LOCK) == 1 ) do
        continue;
    endwhile;
    
    return;
endif ;



// ----ACQUIRE_SCHED_LOCK

// Arguments : NIL Ret : NIL
if( functionNum == ACQUIRE_SCHED_LOCK ) then
    while( tsl(SCHED_LOCK) == 1 ) do
        continue;
    endwhile;
    return;
endif ;


// ----RELEASE_LOCK

// Arguments : LockVarAddress, Ret : NIL
if( functionNum == RELEASE_LOCK ) then
    alias LockVarAddress R2;
    [LockVarAddress] = 0;
endif ;